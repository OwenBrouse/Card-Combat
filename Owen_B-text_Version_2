intensity = 1
kickDamage = 2*intensity
punchDamage = 1*intensity
totalHealth = 10*intensity
numberOfPlayers = 2
numberOfMoves = 5
playerList = []

#======================================================================================================
#classes===============================================================================================
class Player:
	def __init__(self, moves, health, name):
		self.health = health
		self.name = name
		self.moves = [0]*(moves+1)
		self.target = [0]*(moves)

	def info(self):
		"prints the values inside the player"
		print(self.name + ':')
		print("health = " + str(self.health))
		print(self.moves)
		print(self.target)
	
	def planMoves(self):
		'deteminds the series of attacks'
		
		#Print++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		print('Punch = 1','kick = 2','block kick = 3',sep='\n')
		
		#input++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		for i in range(len((self.moves))-1):
			choice = 'null'
			while choice == 'null':
				choice = input(self.name+ ' type your move #' +str(i+1)+'  -  ')
				
				#interger verification subsection
				if choice == '1':
					choice = 1
				elif choice == '2':
					choice = 2
				elif choice == '3':
					choice = 3
				else:
					choice = 'null'
					print('try again')
					
			#output++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++		
			self.moves[i] = choice
		print()	
	
	def planTarget(self,others):	
		'determinds the person being attacked for each attack'
		
		
		#Print++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		you = 'null'
		for i in range(numberOfPlayers):
			if others[i].name != self.name:
				print(others[i].name + ' = ' + str(i))
			else:
				you = i
		
		#input++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		for i in range(len(self.target)):
			choice = 'null'
			while choice == 'null':
				choice = input(self.name+ ' type your target for move #' +str(i+1)+'  -  ')
				
				#interger verification subsection
				for j in range(len(others)):
					if str(j) == choice:
						choice = j
						break
				
		#output+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
				if choice != str(choice)  and choice != you:
					self.target[i] = choice
				else:	
					choice = 'null'
					print('try again')
			
	def damage(self,amount):
		self.health -= amount
		print(self.name + ' has taken ' +str(amount)+' hits')

#======================================================================================================
#funtions==============================================================================================


	
def checkValues():
	"Checks for game breaking inputs"
	if numberOfPlayers > 1 and numberOfMoves > 1 and intensity > 0:
		if kickDamage > 0 and punchDamage > 0:
			return 'TRUE'
		else:
			return 'FLASE'
	else:
		return 'FLASE'
		
def battle(what,who,when,person):
	"detiminds the out come of the attacks"
	#if you don't understand the variables :
		#what		=	the attack bieing performed
		#who		=	what player is being attacked
		#when		=	what round/section of a list that is currently happening 
		#person	=	what player is doinf the attack
	if what == 1:
		print(playerList[person].name + ' punches ' + playerList[who].name)
		if playerList[who].moves[when] == 1 and playerList[who].target[when]==person:
			print('draw')
		else:
			playerList[who].damage(punchDamage)
	if what == 2:
		print(playerList[person].name + ' kicks ' + playerList[who].name)
		if playerList[who].moves[when] == 3 and playerList[who].target[when] == person:
			print('but ' + playerList[who].name + ' blocks it')
			playerList[person].moves[when+1] = -1
			print(playerList[person].name + ' is now stunned')
		elif playerList[who].moves[when] == 2:
			print('draw')
		else:
			playerList[who].damage(kickDamage)
	if what == 3:
		print(playerList[person].name + ' is blocking')
	if what == -1:
		print(playerList[person].name + ' is stunned')

def clear(numLines):
	'prints empty lines to flood the screen'
	for i in range(numLines):
		print()
#======================================================================================================
#run===================================================================================================


#setup-------------------------------------------------------------------------------------------------

if checkValues()=='TRUE':
	clear(50)
	for j in range(numberOfPlayers):
		temp = Player(numberOfMoves,totalHealth,str(input('player '+ str(j+1) +' whats your name - ')))	
		playerList.append(temp)
	
	#input-------------------------------------------------------------------------------------------------
	while playerList[0].health>0 and playerList[1].health>0:
		clear(50)
		for j in range(len(playerList)):
			playerList[j].planMoves()
		
			if numberOfPlayers > 2:
				playerList[j].planTarget(playerList)
			else:
				playerList[1].target = [0,0,0,0,0]
				playerList[0].target = [1,1,1,1,1]
			clear(100)
			#playerList[j].info()
			
		
	#run---------------------------------------------------------------------------------------------------
		for number in range(numberOfMoves):
			print('round ' + str(number+1)+' ------------------')
			for player in range(numberOfPlayers):
				battle(playerList[player].moves[number], playerList[player].target[number],number,player)
				print()
			
	#outup-------------------------------------------------------------------------------------------------
		for j in range(numberOfPlayers):
			print(playerList[j].name + ' is at '+ str(playerList[j].health))
		input('press enter to continue')
	
	#end+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	for j in range(numberOfPlayers):
		print(playerList[j].name, playerList[j].health,sep=(' - '),end=('.............................'))	
else:
	print('Some values in your game are corrupted')


